--- ../src-base/minecraft/net/minecraft/crash/CrashReport.java
+++ ../src-work/minecraft/net/minecraft/crash/CrashReport.java
@@ -21,13 +21,15 @@
 import org.apache.commons.lang3.ArrayUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import red.mohist.Mohist;
+import red.mohist.util.i18n.Message;
 
 public class CrashReport
 {
     private static final Logger LOGGER = LogManager.getLogger();
     private final String description;
     private final Throwable cause;
-    private final CrashReportCategory systemDetailsCategory = new CrashReportCategory(this, "System Details");
+    private final CrashReportCategory systemDetailsCategory = new CrashReportCategory(this, Message.getString("minecraft.crashreport"));
     private final List<CrashReportCategory> crashReportSections = Lists.<CrashReportCategory>newArrayList();
     private File crashReportFile;
     private boolean firstCategoryInCrashReport = true;
@@ -42,35 +44,35 @@
 
     private void populateEnvironment()
     {
-        this.systemDetailsCategory.addDetail("Minecraft Version", new ICrashReportDetail<String>()
+        this.systemDetailsCategory.addDetail(Message.getString("minecraft.crashreport1"), new ICrashReportDetail<String>()
         {
             public String call()
             {
-                return "1.12.2";
+                return "1.12.2-" + Mohist.getVersion();
             }
         });
-        this.systemDetailsCategory.addDetail("Operating System", new ICrashReportDetail<String>()
+        this.systemDetailsCategory.addDetail(Message.getString("minecraft.crashreport2"), new ICrashReportDetail<String>()
         {
             public String call()
             {
-                return System.getProperty("os.name") + " (" + System.getProperty("os.arch") + ") version " + System.getProperty("os.version");
+                return System.getProperty("os.name") + " (" + System.getProperty("os.arch") + ") " + Message.getString("minecraft.crashreport3") + " " + System.getProperty("os.version");
             }
         });
-        this.systemDetailsCategory.addDetail("Java Version", new ICrashReportDetail<String>()
+        this.systemDetailsCategory.addDetail(Message.getString("minecraft.crashreport4"), new ICrashReportDetail<String>()
         {
             public String call()
             {
                 return System.getProperty("java.version") + ", " + System.getProperty("java.vendor");
             }
         });
-        this.systemDetailsCategory.addDetail("Java VM Version", new ICrashReportDetail<String>()
+        this.systemDetailsCategory.addDetail(Message.getString("minecraft.crashreport5"), new ICrashReportDetail<String>()
         {
             public String call()
             {
                 return System.getProperty("java.vm.name") + " (" + System.getProperty("java.vm.info") + "), " + System.getProperty("java.vm.vendor");
             }
         });
-        this.systemDetailsCategory.addDetail("Memory", new ICrashReportDetail<String>()
+        this.systemDetailsCategory.addDetail(Message.getString("minecraft.crashreport6"), new ICrashReportDetail<String>()
         {
             public String call()
             {
@@ -84,7 +86,7 @@
                 return k + " bytes (" + j1 + " MB) / " + j + " bytes (" + i1 + " MB) up to " + i + " bytes (" + l + " MB)";
             }
         });
-        this.systemDetailsCategory.addDetail("JVM Flags", new ICrashReportDetail<String>()
+        this.systemDetailsCategory.addDetail(Message.getString("minecraft.crashreport7"), new ICrashReportDetail<String>()
         {
             public String call()
             {
@@ -109,13 +111,15 @@
                 return String.format("%d total; %s", i, stringbuilder.toString());
             }
         });
-        this.systemDetailsCategory.addDetail("IntCache", new ICrashReportDetail<String>()
+        this.systemDetailsCategory.addDetail(Message.getString("minecraft.crashreport8"), new ICrashReportDetail<String>()
         {
             public String call() throws Exception
             {
                 return IntCache.getCacheSizes();
             }
         });
+        this.systemDetailsCategory.addDetail(Message.getString("minecraft.crashreport9"), (ICrashReportDetail) new org.bukkit.craftbukkit.v1_12_R1.CraftCrashReport());
+        net.minecraftforge.fml.common.FMLCommonHandler.instance().enhanceCrashReport(this, this.systemDetailsCategory);
     }
 
     public String getDescription()
@@ -137,9 +141,9 @@
 
         if (this.stacktrace != null && this.stacktrace.length > 0)
         {
-            builder.append("-- Head --\n");
-            builder.append("Thread: ").append(Thread.currentThread().getName()).append("\n");
-            builder.append("Stacktrace:\n");
+            builder.append("-- " + Message.getString("minecraft.crashreport10") + " --\n");
+            builder.append(Message.getString("minecraft.crashreport11") + ": ").append(Thread.currentThread().getName()).append("\n");
+            builder.append(Message.getString("minecraft.crashreport12") + ":\n");
 
             for (StackTraceElement stacktraceelement : this.stacktrace)
             {
@@ -204,18 +208,17 @@
     public String getCompleteReport()
     {
         StringBuilder stringbuilder = new StringBuilder();
-        stringbuilder.append("---- Minecraft Crash Report ----\n");
-        stringbuilder.append("// ");
-        stringbuilder.append(getWittyComment());
+        stringbuilder.append(Message.getString("minecraft.crashreport13") + "\n");
+        net.minecraftforge.fml.relauncher.CoreModManager.onCrash(stringbuilder);
         stringbuilder.append("\n\n");
-        stringbuilder.append("Time: ");
+        stringbuilder.append(Message.getString("minecraft.crashreport14") + ": ");
         stringbuilder.append((new SimpleDateFormat()).format(new Date()));
         stringbuilder.append("\n");
-        stringbuilder.append("Description: ");
+        stringbuilder.append(Message.getString("minecraft.crashreport15") + ": ");
         stringbuilder.append(this.description);
         stringbuilder.append("\n\n");
         stringbuilder.append(this.getCauseStackTraceOrString());
-        stringbuilder.append("\n\nA detailed walkthrough of the error, its code path and all known details is as follows:\n");
+        stringbuilder.append("\n\n" + Message.getString("minecraft.crashreport16") + ":\n");
 
         for (int i = 0; i < 87; ++i)
         {
@@ -259,7 +262,7 @@
             }
             catch (Throwable throwable)
             {
-                LOGGER.error("Could not save crash report to {}", toFile, throwable);
+                LOGGER.error(Message.getFormatString("minecraft.crashreport17", new Object[] {toFile}), throwable);
                 flag1 = false;
             }
             finally
